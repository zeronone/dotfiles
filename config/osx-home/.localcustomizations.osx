
# Java (multiple versions)
# export JAVA_8_HOME=$(/usr/libexec/java_home -v1.8)
# export JAVA_9_HOME=$(/usr/libexec/java_home -v9)
export JAVA_11_HOME=$(/usr/libexec/java_home -v11)

alias java8='export JAVA_HOME=$(/usr/libexec/java_home -v1.8)'
alias java9='export JAVA_HOME=$(/usr/libexec/java_home -v9)'
alias java11='export JAVA_HOME=$JAVA_11_HOME'

#default java8
export JAVA_HOME=$JAVA_11_HOME

# .oh-my-zsh prompt prefix
# export PS1="[osx] $PS1"


# brew install bintuils
export PATH="/usr/local/opt/binutils/bin:$PATH"

# manpth
export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:${MANPATH-/usr/share/man}"
export MANPATH="$HOME/man/linux-kernel:${MANPATH-/usr/share/man}"
export PATH="/usr/local/opt/curl/bin:$PATH"

## llvm (clangd)
export PATH="/usr/local/opt/llvm/bin:$PATH"

# coreutils
export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
# gnu time
PATH="/usr/local/opt/gnu-time/libexec/gnubin:$PATH"


export ANDROID_HOME=/Users/$USER/Library/Android/sdk
export PATH=${PATH}:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools

export PATH="/usr/local/opt/mysql@5.7/bin:$PATH"

# Minizinc
export PATH="/Applications/MiniZincIDE.app/Contents/Resources:$PATH"
export PATH="$HOME/bin:$PATH"


# emacs-mac path
export PATH="/usr/local/opt/emacs-mac/bin:$PATH"


# emacs-mac daemon
function emrestart {
    if pgrep "emacs.*daemon" > /dev/null
    then
        echo "killing emacs daemon process"
        $EMACS_BIN_DIR/emacsclient -e "(kill-emacs)"
    fi
  launchctl unload "$HOME/Library/LaunchAgents/emacsserver.plist" &&
  launchctl load "$HOME/Library/LaunchAgents/emacsserver.plist"
}

function emstop {
    if pgrep "emacs.*daemon" > /dev/null
    then
        echo "killing emacs daemon process"
        $EMACS_BIN_DIR/emacsclient -e "(kill-emacs)"
    fi
}

function cmake_clang_init {
    export LDFLAGS="-L/usr/local/opt/llvm/lib"
    export CPPFLAGS="-I/usr/local/opt/llvm/include"

    cmake -DCMAKE_BUILD_TYPE=Debug \
        -DCMAKE_EXPORT_COMPILE_COMMANDS=1 \
        -DCMAKE_C_COMPILER=/usr/local/opt/llvm/bin/clang \
        -DCMAKE_CXX_COMPILER=/usr/local/opt/llvm/bin/clang++ \
        $1
}

function cmake_clang_init_llvm8 {
    export LDFLAGS="-L/usr/local/opt/llvm@8/lib"
    export CPPFLAGS="-I/usr/local/opt/llvm@8/include"

    cmake -DCMAKE_BUILD_TYPE=Debug \
        -DCMAKE_EXPORT_COMPILE_COMMANDS=1 \
        -DCMAKE_C_COMPILER="/usr/local/opt/llvm@8/bin/clang" \
        -DCMAKE_CXX_COMPILER="/usr/local/opt/llvm@8/bin/clang++" \
        $1
}


